@page "/inventorypage"
@using MechanicalShop.Data
@using MySqlConnector
@inject IJSRuntime JS

<h3>Inventory</h3>

<div class="d-grid gap-2 col-6 mx-auto my-3">
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addInventoryModal">Add New Part</button>
</div>

<table class="table align-middle table-striped">
    <thead>
        <tr>
            <th scope="col" class="text-center">ID</th>
            <th scope="col" class="text-center">Brand</th>
            <th scope="col" class="text-center">Model</th>
            <th scope="col" class="text-center">Part Name</th>
            <th scope="col" class="text-center">Unit Price</th>
            <th scope="col" class="text-center">Quantity</th>
            <th scope="col" class="text-center">Update</th>
            <th scope="col" class="text-center">Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var myInventory in inventories)
        {
            <tr>
                <td>@myInventory.PartId</td>
                <td>@myInventory.Brand</td>
                <td>@myInventory.Model</td>
                <td>@myInventory.PartName</td>
                <td class="text-end">@myInventory.UnitPrice.ToString("F2")</td>
                <td class="text-end">@myInventory.InventoryQuantity</td>
                <td class="text-center"><button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#updateInventoryModal" @onclick="()=> ShowInventory(myInventory)">Update</button></td>
                <td class="text-center"><button type="button" class="btn btn-danger btn-sm" @onclick="()=> DeleteInventory(myInventory)">Delete</button></td>
            </tr>
        }
    </tbody>
</table>

<!-- Add Part Modal -->
<div class="modal fade" id="addInventoryModal" tabindex="-1" aria-labelledby="addInventoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="addInventoryModalLabel">Add Part</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row g-3">
                    <div class="col-12">
                        <label class="form-label">Part ID</label>
                        <input class="form-control" placeholder="Part ID" @bind="newPartId">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Brand</label>
                        <input class="form-control" placeholder="Brand" @bind="newBrand">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Model</label>
                        <input class="form-control" placeholder="Model" @bind="newModel">
                    </div>
                    <div class="col-12">
                        <label class="form-label">Part Name</label>
                        <input class="form-control" placeholder="Part Name" @bind="newPartName">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Unit Price</label>
                        <input class="form-control" placeholder="Unit Price" @bind="newUnitPrice">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Quantity</label>
                        <input class="form-control" placeholder="Quantity" @bind="newInventoryQuantity">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="ClearInventoryNewVariable">Close</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="AddInventory">Add</button>
            </div>
        </div>
    </div>
</div>

<!-- Update Part Modal -->
<div class="modal fade" id="updateInventoryModal" tabindex="-1" aria-labelledby="updateInventoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="updateInventoryModalLabel">Update Part</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row g-3">
                    <div class="col-12">
                        <label class="form-label">Part ID</label>
                        <input class="form-control" placeholder="Part ID" @bind="newPartId">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Brand</label>
                        <input class="form-control" placeholder="Brand" @bind="newBrand">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Model</label>
                        <input class="form-control" placeholder="Model" @bind="newModel">
                    </div>
                    <div class="col-12">
                        <label class="form-label">Part Name</label>
                        <input class="form-control" placeholder="Part Name" @bind="newPartName">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Unit Price</label>
                        <input class="form-control" placeholder="Unit Price" @bind="newUnitPrice">
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Quantity</label>
                        <input class="form-control" placeholder="Quantity" @bind="newInventoryQuantity">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" @onclick="ClearInventoryNewVariable">Close</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="UpdateInventory">Update</button>
            </div>
        </div>
    </div>
</div>


@code {
    private MySqlConnectionStringBuilder builder;
    private MySqlConnection connection;
    private List<Inventory> inventories;
    private Inventory oldInventory;
    private string? newPartId;
    private string? newBrand;
    private string? newModel;
    private string? newPartName;
    private double newUnitPrice;
    private int newInventoryQuantity;

    protected override async Task OnInitializedAsync()
    {
        inventories = new List<Inventory>();
        builder = new MySqlConnectionStringBuilder
            {
                Server = "localhost",
                Database = "cprg211project",
                UserID = "root",
                Password = "1234",
            };
        connection = new MySqlConnection(builder.ConnectionString);
        LoadInventory();
    }

    private void LoadInventory()
    {
        connection.Open();
        string sql = "select * from inventory";
        MySqlCommand command = new MySqlCommand(sql, connection);
        using (MySqlDataReader reader = command.ExecuteReader())
        {
            while (reader.Read())
            {
                string partId = Convert.ToString(reader["part_id"]);
                string brand = Convert.ToString(reader["brand"]);
                string model = Convert.ToString(reader["model"]);
                string partName = Convert.ToString(reader["part_name"]);
                double unitPrice = Convert.ToDouble(reader["unit_price"]);
                int inventoryQuantity = Convert.ToInt32(reader["inventory_quantity"]);

                Inventory newInventory = new Inventory(partId, brand, model, partName, unitPrice, inventoryQuantity);
                inventories.Add(newInventory);
            }
        }
        connection.Close();
    }

    private void AddInventory()
    {
        Inventory newInventory = new Inventory(newPartId, newBrand, newModel, newPartName, newUnitPrice, newInventoryQuantity);
        inventories.Add(newInventory);
        ClearInventoryNewVariable();

        connection.Open();
        string sql = $"INSERT INTO inventory (part_id, brand, model, part_name, unit_price, inventory_quantity) VALUES ('{newInventory.PartId}','{newInventory.Brand}','{newInventory.Model}','{newInventory.PartName}',{newInventory.UnitPrice}, {newInventory.InventoryQuantity})";
        MySqlCommand command = new MySqlCommand(sql, connection);
        command.ExecuteNonQuery();
        connection.Close();

        JS.InvokeVoidAsync("hideModal", "addInventoryModal");
    }

    private void ShowInventory(Inventory myInventory)
    {
        oldInventory = new Inventory(myInventory.PartId, myInventory.Brand, myInventory.Model, myInventory.PartName, myInventory.UnitPrice, myInventory.InventoryQuantity);
        newPartId = myInventory.PartId;
        newBrand = myInventory.Brand;
        newModel = myInventory.Model;
        newPartName = myInventory.PartName;
        newUnitPrice = myInventory.UnitPrice;
        newInventoryQuantity = myInventory.InventoryQuantity;
    }

    private void UpdateInventory()
    {
        int index = 0;
        bool found = false;

        foreach (Inventory myInventory in inventories)
        {
            if (oldInventory.PartId == myInventory.PartId && oldInventory.Brand == myInventory.Brand && oldInventory.Model == myInventory.Model && oldInventory.PartName == myInventory.PartName && oldInventory.UnitPrice == myInventory.UnitPrice && oldInventory.InventoryQuantity == myInventory.InventoryQuantity)
            {
                found = true;
                break;
            }
            index++;
        }

        if (found)
        {
            inventories[index].PartId = newPartId;
            inventories[index].Brand = newBrand;
            inventories[index].Model = newModel;
            inventories[index].PartName = newPartName;
            inventories[index].UnitPrice = newUnitPrice;
            inventories[index].InventoryQuantity = newInventoryQuantity;
        }
        ClearInventoryNewVariable();

        connection.Open();
        string sql = $"UPDATE inventory SET part_id = '{inventories[index].PartId}', brand = '{inventories[index].Brand}', model = '{inventories[index].Model}', part_name = '{inventories[index].PartName}', unit_price = {inventories[index].UnitPrice}, inventory_quantity = {inventories[index].InventoryQuantity} WHERE part_id = '{oldInventory.PartId}' AND brand = '{oldInventory.Brand}' AND model = '{oldInventory.Model}' AND part_name = '{oldInventory.PartName}' AND unit_price = {oldInventory.UnitPrice} AND inventory_quantity = {oldInventory.InventoryQuantity}";
        MySqlCommand command = new MySqlCommand(sql, connection);
        command.ExecuteNonQuery();
        connection.Close();

        JS.InvokeVoidAsync("hideModal", "updateInventoryModal");
    }

    private void DeleteInventory(Inventory myInventory)
    {
        oldInventory = new Inventory(myInventory.PartId, myInventory.Brand, myInventory.Model, myInventory.PartName, myInventory.UnitPrice, myInventory.InventoryQuantity);
        inventories.Remove(myInventory);

        connection.Open();
        string sql = $"DELETE FROM inventory WHERE part_id = '{oldInventory.PartId}' AND brand = '{oldInventory.Brand}' AND model = '{oldInventory.Model}' AND part_name = '{oldInventory.PartName}' AND unit_price = {oldInventory.UnitPrice} AND inventory_quantity = {oldInventory.InventoryQuantity}";
        MySqlCommand command = new MySqlCommand(sql, connection);
        command.ExecuteNonQuery();
        connection.Close();
    }

    private void ClearInventoryNewVariable()
    {
        newPartId = "";
        newBrand = "";
        newModel = "";
        newPartName = "";
        newUnitPrice = 0;
        newInventoryQuantity = 0;
    }
}
